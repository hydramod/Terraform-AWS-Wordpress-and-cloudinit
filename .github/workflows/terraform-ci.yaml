name: Terraform CI

on:
  push:
    branches: ["main"]
    paths:
      - "**/*.tf"
      - "**/*.tfvars"
      - ".tflint.hcl"
      - ".tfsec.yml"
  pull_request:
    branches: ["main"]
    paths:
      - "**/*.tf"
      - "**/*.tfvars"
      - ".tflint.hcl"
      - ".tfsec.yml"
  workflow_dispatch:

env:
  TF_IN_AUTOMATION: "true"
  TF_INPUT: "false"
  AWS_REGION: us-east-1

jobs:
  lint-validate:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        workdir: [".", "bootstrap"]
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.5
      - name: Terraform fmt (check)
        working-directory: ${{ matrix.workdir }}
        run: terraform fmt -check -recursive
      - name: Terraform init (no backend)
        working-directory: ${{ matrix.workdir }}
        run: terraform init -backend=false
      - name: Terraform validate
        working-directory: ${{ matrix.workdir }}
        run: terraform validate -no-color
      - name: TFLint
        uses: terraform-linters/tflint-action@v5
        with:
          args: -f compact
          working_directory: ${{ matrix.workdir }}
      - name: tfsec
        uses: aquasecurity/tfsec-action@v1
        with:
          working_directory: ${{ matrix.workdir }}
          soft_fail: true
  plan:
    runs-on: ubuntu-latest
    needs: lint-validate
    if: ${{ secrets.AWS_ACCESS_KEY_ID != '' && secrets.AWS_SECRET_ACCESS_KEY != '' }}
    strategy:
      fail-fast: false
      matrix:
        workdir: [".", "bootstrap"]
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.5
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Terraform init
        working-directory: ${{ matrix.workdir }}
        run: terraform init
      - name: Terraform plan
        working-directory: ${{ matrix.workdir }}
        shell: bash
        run: |
          EXTRA_ARGS=""
          if [ -f "terraform.tfvars" ]; then
            EXTRA_ARGS="-var-file=terraform.tfvars"
          fi
          terraform plan -no-color -lock=false $EXTRA_ARGS
