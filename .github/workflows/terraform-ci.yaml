name: Terraform CI

on:
  push:
    branches: [ "main" ]
    paths:
      - "**/*.tf"
      - "**/*.tfvars"
      - ".tflint.hcl"
      - ".tfsec.yml"
  pull_request:
    branches: [ "main" ]
    paths:
      - "**/*.tf"
      - "**/*.tfvars"
      - ".tflint.hcl"
      - ".tfsec.yml"
  workflow_dispatch:

env:
  TF_IN_AUTOMATION: "true"
  TF_INPUT: "false"
  AWS_REGION: us-east-1
  TFLINT_CONFIG_FILE: ${{ github.workspace }}/.tflint.hcl

jobs:
  lint-validate:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        workdir: [ ".", "bootstrap" ]
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.13.4

      - name: Terraform fmt
        working-directory: ${{ matrix.workdir }}
        run: terraform fmt -check -recursive

      - name: Terraform init (no backend)
        working-directory: ${{ matrix.workdir }}
        run: terraform init -backend=false

      - name: Terraform validate
        working-directory: ${{ matrix.workdir }}
        run: terraform validate -no-color

      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v4

      - name: Cache TFLint plugins
        uses: actions/cache@v4
        with:
          path: ~/.tflint.d/plugins
          key: tflint-plugins-${{ runner.os }}-${{ hashFiles('.tflint.hcl') }}

      - name: TFLint init
        working-directory: ${{ matrix.workdir }}
        run: tflint --init

      - name: TFLint
        working-directory: ${{ matrix.workdir }}
        run: tflint -f compact

      - name: tfsec
        uses: aquasecurity/tfsec-sarif-action@v0.1.4
        with:
          working_directory: ${{ matrix.workdir }}
          sarif_file: tfsec.sarif

      - name: Upload SARIF to Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: tfsec.sarif
          category: tfsec-${{ matrix.workdir }}

  plan:
    runs-on: ubuntu-latest
    needs: lint-validate
    strategy:
      fail-fast: false
      matrix:
        workdir: [ ".", "bootstrap" ]
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.13.4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform init
        working-directory: ${{ matrix.workdir }}
        run: terraform init

      - name: Terraform plan
        working-directory: ${{ matrix.workdir }}
        shell: bash
        run: |
          EXTRA_ARGS=""
          if [ -f "terraform.tfvars" ]; then
            EXTRA_ARGS="-var-file=terraform.tfvars"
          fi
          terraform plan -no-color -lock=false $EXTRA_ARGS
